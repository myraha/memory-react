{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime-corejs2/helpers/interopRequireDefault\");\n\nvar _set = _interopRequireDefault(require(\"@babel/runtime-corejs2/core-js/set\"));\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst react_1 = require(\"react\");\n\nconst isServer = typeof window === 'undefined';\n\nfunction withSideEffect() {\n  const mountedInstances = new _set.default();\n  let state;\n\n  function emitChange(component) {\n    state = component.props.reduceComponentsToState([...mountedInstances], component.props);\n\n    if (component.props.handleStateChange) {\n      component.props.handleStateChange(state);\n    }\n  }\n\n  class SideEffect extends react_1.Component {\n    // Used when server rendering\n    static rewind() {\n      const recordedState = state;\n      state = undefined;\n      mountedInstances.clear();\n      return recordedState;\n    }\n\n    constructor(props) {\n      super(props);\n\n      if (isServer) {\n        mountedInstances.add(this);\n        emitChange(this);\n      }\n    }\n\n    componentDidMount() {\n      mountedInstances.add(this);\n      emitChange(this);\n    }\n\n    componentDidUpdate() {\n      emitChange(this);\n    }\n\n    componentWillUnmount() {\n      mountedInstances.delete(this);\n      emitChange(this);\n    }\n\n    render() {\n      return null;\n    }\n\n  }\n\n  return SideEffect;\n}\n\nexports.default = withSideEffect;","map":{"version":3,"sources":["/Users/myraha/Desktop/Projects/memory-app/hello-next/node_modules/next-server/dist/lib/side-effect.js"],"names":["Object","defineProperty","exports","value","react_1","require","isServer","window","withSideEffect","mountedInstances","state","emitChange","component","props","reduceComponentsToState","handleStateChange","SideEffect","Component","rewind","recordedState","undefined","clear","constructor","add","componentDidMount","componentDidUpdate","componentWillUnmount","delete","render","default"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,QAAQ,GAAG,OAAOC,MAAP,KAAkB,WAAnC;;AACA,SAASC,cAAT,GAA0B;AACtB,QAAMC,gBAAgB,GAAG,kBAAzB;AACA,MAAIC,KAAJ;;AACA,WAASC,UAAT,CAAoBC,SAApB,EAA+B;AAC3BF,IAAAA,KAAK,GAAGE,SAAS,CAACC,KAAV,CAAgBC,uBAAhB,CAAwC,CAAC,GAAGL,gBAAJ,CAAxC,EAA+DG,SAAS,CAACC,KAAzE,CAAR;;AACA,QAAID,SAAS,CAACC,KAAV,CAAgBE,iBAApB,EAAuC;AACnCH,MAAAA,SAAS,CAACC,KAAV,CAAgBE,iBAAhB,CAAkCL,KAAlC;AACH;AACJ;;AACD,QAAMM,UAAN,SAAyBZ,OAAO,CAACa,SAAjC,CAA2C;AACvC;AACA,WAAOC,MAAP,GAAgB;AACZ,YAAMC,aAAa,GAAGT,KAAtB;AACAA,MAAAA,KAAK,GAAGU,SAAR;AACAX,MAAAA,gBAAgB,CAACY,KAAjB;AACA,aAAOF,aAAP;AACH;;AACDG,IAAAA,WAAW,CAACT,KAAD,EAAQ;AACf,YAAMA,KAAN;;AACA,UAAIP,QAAJ,EAAc;AACVG,QAAAA,gBAAgB,CAACc,GAAjB,CAAqB,IAArB;AACAZ,QAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ;;AACDa,IAAAA,iBAAiB,GAAG;AAChBf,MAAAA,gBAAgB,CAACc,GAAjB,CAAqB,IAArB;AACAZ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDc,IAAAA,kBAAkB,GAAG;AACjBd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDe,IAAAA,oBAAoB,GAAG;AACnBjB,MAAAA,gBAAgB,CAACkB,MAAjB,CAAwB,IAAxB;AACAhB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;;AACDiB,IAAAA,MAAM,GAAG;AACL,aAAO,IAAP;AACH;;AA5BsC;;AA8B3C,SAAOZ,UAAP;AACH;;AACDd,OAAO,CAAC2B,OAAR,GAAkBrB,cAAlB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\nconst isServer = typeof window === 'undefined';\nfunction withSideEffect() {\n    const mountedInstances = new Set();\n    let state;\n    function emitChange(component) {\n        state = component.props.reduceComponentsToState([...mountedInstances], component.props);\n        if (component.props.handleStateChange) {\n            component.props.handleStateChange(state);\n        }\n    }\n    class SideEffect extends react_1.Component {\n        // Used when server rendering\n        static rewind() {\n            const recordedState = state;\n            state = undefined;\n            mountedInstances.clear();\n            return recordedState;\n        }\n        constructor(props) {\n            super(props);\n            if (isServer) {\n                mountedInstances.add(this);\n                emitChange(this);\n            }\n        }\n        componentDidMount() {\n            mountedInstances.add(this);\n            emitChange(this);\n        }\n        componentDidUpdate() {\n            emitChange(this);\n        }\n        componentWillUnmount() {\n            mountedInstances.delete(this);\n            emitChange(this);\n        }\n        render() {\n            return null;\n        }\n    }\n    return SideEffect;\n}\nexports.default = withSideEffect;\n"]},"metadata":{},"sourceType":"script"}